!function(e){var n={};function t(a){if(n[a])return n[a].exports;var r=n[a]={i:a,l:!1,exports:{}};return e[a].call(r.exports,r,r.exports,t),r.l=!0,r.exports}t.m=e,t.c=n,t.d=function(e,n,a){t.o(e,n)||Object.defineProperty(e,n,{enumerable:!0,get:a})},t.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},t.t=function(e,n){if(1&n&&(e=t(e)),8&n)return e;if(4&n&&"object"==typeof e&&e&&e.__esModule)return e;var a=Object.create(null);if(t.r(a),Object.defineProperty(a,"default",{enumerable:!0,value:e}),2&n&&"string"!=typeof e)for(var r in e)t.d(a,r,function(n){return e[n]}.bind(null,r));return a},t.n=function(e){var n=e&&e.__esModule?function(){return e.default}:function(){return e};return t.d(n,"a",n),n},t.o=function(e,n){return Object.prototype.hasOwnProperty.call(e,n)},t.p="",t(t.s="./src/javascript/index.ts")}({"./src/javascript/Elements.ts":
/*!************************************!*\
  !*** ./src/javascript/Elements.ts ***!
  \************************************/
/*! exports provided: Elements */function(module,__webpack_exports__,__webpack_require__){"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Elements", function() { return Elements; });\nvar Elements = /** @class */ (function () {\n    function Elements() {\n    }\n    Elements.getImageInput = function () {\n        return document.getElementById("file-input");\n    };\n    Elements.getXmlInput = function () {\n        return document.getElementById("file-input-xml");\n    };\n    Elements.getImageSide = function () {\n        return document.getElementById("imageSide");\n    };\n    Elements.getOpenImageDiv = function () {\n        return document.getElementById("openImageDiv");\n    };\n    Elements.getCanvasHolder = function () {\n        return document.getElementById("canvasHolder");\n    };\n    Elements.getXmlSide = function () {\n        return document.getElementById("xmlSide");\n    };\n    Elements.getXmlContent = function () {\n        return document.getElementById("xmlContent");\n    };\n    Elements.getTextContent = function () {\n        return document.getElementById("textContent");\n    };\n    Elements.getCharacterBlockPreview = function () {\n        return document.getElementById("characterBlockPreview");\n    };\n    return Elements;\n}());\n\n\n\n//# sourceURL=webpack:///./src/javascript/Elements.ts?')},"./src/javascript/RectangleOptions.ts":
/*!********************************************!*\
  !*** ./src/javascript/RectangleOptions.ts ***!
  \********************************************/
/*! exports provided: RectangleOptions */function(module,__webpack_exports__,__webpack_require__){"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "RectangleOptions", function() { return RectangleOptions; });\nvar RectangleOptions = /** @class */ (function () {\n    function RectangleOptions(xmlBlock) {\n        var t = Number(xmlBlock.getAttribute("t"));\n        var b = Number(xmlBlock.getAttribute("b"));\n        var l = Number(xmlBlock.getAttribute("l"));\n        var r = Number(xmlBlock.getAttribute("r"));\n        this.top = t;\n        this.left = l;\n        this.height = b - t;\n        this.width = r - l;\n        this.xml = xmlBlock;\n    }\n    return RectangleOptions;\n}());\n\n\n\n//# sourceURL=webpack:///./src/javascript/RectangleOptions.ts?')},"./src/javascript/index.ts":
/*!*********************************!*\
  !*** ./src/javascript/index.ts ***!
  \*********************************/
/*! no exports provided */function(module,__webpack_exports__,__webpack_require__){"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _RectangleOptions__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./RectangleOptions */ "./src/javascript/RectangleOptions.ts");\n/* harmony import */ var _Elements__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Elements */ "./src/javascript/Elements.ts");\n/* harmony import */ var _xmlStuff__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./xmlStuff */ "./src/javascript/xmlStuff.ts");\n\n\n\nfunction getPathFromEvent(e) {\n    //@ts-ignore\n    return URL.createObjectURL(event.target.files[0]);\n}\n// event Listener\ndocument.addEventListener(\'readystatechange\', function (event) {\n    //@ts-ignore\n    if (event.target.readyState === "interactive") { //same as:  ..addEventListener("DOMContentLoaded".. and   jQuery.ready\n        _Elements__WEBPACK_IMPORTED_MODULE_1__["Elements"].getOpenImageDiv().addEventListener("click", function () {\n            _Elements__WEBPACK_IMPORTED_MODULE_1__["Elements"].getImageInput().click();\n        });\n        _Elements__WEBPACK_IMPORTED_MODULE_1__["Elements"].getImageInput().addEventListener("change", function (event) {\n            var path = getPathFromEvent(event);\n            var fakePath = _Elements__WEBPACK_IMPORTED_MODULE_1__["Elements"].getImageInput().value;\n            if ([".tif", "tiff"].includes(fakePath.slice(fakePath.length - 4))) {\n                _Elements__WEBPACK_IMPORTED_MODULE_1__["Elements"].getOpenImageDiv().style.display = "none";\n                loadTiff(path);\n            }\n            else if ([".png", ".jpg", "jpeg"].includes(fakePath.slice(fakePath.length - 4))) {\n                loadImage(path);\n            }\n            else {\n                alert("input is invalid");\n                _Elements__WEBPACK_IMPORTED_MODULE_1__["Elements"].getImageInput().value = "";\n                return;\n            }\n        });\n        _Elements__WEBPACK_IMPORTED_MODULE_1__["Elements"].getXmlInput().addEventListener("change", function (event) {\n            var path = getPathFromEvent(event);\n            var fakePath = _Elements__WEBPACK_IMPORTED_MODULE_1__["Elements"].getXmlInput().value;\n            if (path.length < 4 || fakePath.slice(fakePath.length - 3) != "xml") {\n                alert("input is invalid");\n                _Elements__WEBPACK_IMPORTED_MODULE_1__["Elements"].getXmlInput().value = "";\n                return;\n            }\n            loadXml(path);\n        });\n        // tabbs\n        //@ts-ignore\n        new Tabby(\'[data-tabs]\');\n    }\n    //@ts-ignore\n    if (event.target.readyState === "complete") { }\n});\nfunction clearFields() {\n    _Elements__WEBPACK_IMPORTED_MODULE_1__["Elements"].getXmlContent().innerHTML = "";\n    _Elements__WEBPACK_IMPORTED_MODULE_1__["Elements"].getTextContent().innerHTML = "";\n    // delete all block diffs\n    while (1) {\n        var bs = document.getElementsByClassName("blockThing");\n        if (bs.length == 0)\n            break;\n        //@ts-ignore\n        bs[0].parentNode.removeChild(bs[0]);\n    }\n    // delete all character diffs\n    while (1) {\n        var cbs = document.getElementsByClassName("cBlockThing");\n        if (cbs.length == 0)\n            break;\n        //@ts-ignore\n        cbs[0].parentNode.removeChild(cbs[0]);\n    }\n}\nfunction getImage(path, block) {\n    var xhr = new XMLHttpRequest();\n    xhr.responseType = \'arraybuffer\';\n    xhr.open(\'GET\', path);\n    xhr.onload = function (e) {\n        block(xhr.response);\n    };\n    xhr.send();\n}\nfunction loadTiff(path) {\n    // delete previous created boxes and xml output\n    clearFields();\n    //@ts-ignore\n    Tiff.initialize({ TOTAL_MEMORY: 50 * 1024 * 1024 });\n    getImage(path, function (image) {\n        // delete previous created canvas\n        var css = document.getElementsByClassName("imageCanvas");\n        //@ts-ignore\n        if (css.length > 0)\n            css[0].parentElement.removeChild(css[0]);\n        // create new canvas (image)\n        //@ts-ignore\n        var tiff = new Tiff({ buffer: image });\n        var canvas = tiff.toCanvas();\n        canvas.classList.add("imageCanvas");\n        canvas.style.zIndex = "6";\n        _Elements__WEBPACK_IMPORTED_MODULE_1__["Elements"].getCanvasHolder().append(canvas);\n    });\n}\nfunction loadImage(path) {\n    clearFields();\n    _Elements__WEBPACK_IMPORTED_MODULE_1__["Elements"].getOpenImageDiv().style.display = "none";\n    // delete previous created canvas\n    var css = document.getElementsByClassName("imageCanvas");\n    //@ts-ignore\n    if (css.length > 0)\n        css[0].parentElement.removeChild(css[0]);\n    // create new canvas (image)\n    var canvas = document.createElement(\'canvas\');\n    var context = canvas.getContext(\'2d\');\n    var img = document.createElement("img");\n    img.src = path;\n    img.onload = function () {\n        canvas.height = img.height;\n        canvas.width = img.width;\n        //@ts-ignore\n        context.drawImage(img, 0, 0, img.width, img.height);\n        //@ts-ignore\n        window.URL.revokeObjectURL(this.src);\n    };\n    canvas.classList.add("imageCanvas");\n    canvas.style.zIndex = "6";\n    // @ts-ignore\n    _Elements__WEBPACK_IMPORTED_MODULE_1__["Elements"].getCanvasHolder().append(canvas);\n}\nfunction getDiv(xPos, yPos, width, height, imageScaleFactor) {\n    var rect = document.createElement("div");\n    rect.style.top = imageScaleFactor * xPos + "px";\n    rect.style.left = imageScaleFactor * yPos + "px";\n    rect.style.width = imageScaleFactor * width + "px";\n    rect.style.height = imageScaleFactor * height + "px";\n    return rect;\n}\nfunction makeCRect(xPos, yPos, width, height, scaleFactor, xml) {\n    // add character box\n    var rect = getDiv(yPos, xPos, width, height, scaleFactor);\n    rect.classList.add("cBlockThing");\n    //@ts-ignore\n    _Elements__WEBPACK_IMPORTED_MODULE_1__["Elements"].getCanvasHolder().appendChild(rect);\n    // add functions to show popup dialog\n    rect.addEventListener(\'mouseover\', function (event) {\n        var bP = _Elements__WEBPACK_IMPORTED_MODULE_1__["Elements"].getCharacterBlockPreview();\n        // format xmlString\n        var xmlString = (new XMLSerializer()).serializeToString(xml);\n        var readyString = xmlString.replace(/ ([^=]+)=/g, "\\n\\t$1=").replace(/&/g, \'&amp;\').replace(/</g, \'&lt;\').replace(/>/g, \'&gt;\').replace(/ /g, \'&nbsp;\').replace(/\\n/g, \'<br />\');\n        //@ts-ignore\n        bP.innerHTML = PR.prettyPrintOne(readyString);\n        var bPRect = bP.getBoundingClientRect();\n        var bPHeight = bPRect.bottom - bPRect.top;\n        var mouseLeft = event.pageX;\n        var mouseTop = event.pageY;\n        // calculate where the popup window is supposed to show up\n        var notEnoughSpace = mouseTop + bPHeight > window.screen.height - 50;\n        if (notEnoughSpace) {\n            bP.style.top = mouseTop - 10 - bPHeight + "px";\n            bP.style.left = mouseLeft + 10 + "px";\n        }\n        else {\n            bP.style.top = mouseTop + 10 + "px";\n            bP.style.left = mouseLeft + 10 + "px";\n        }\n        bP.style.visibility = "visible";\n    });\n    rect.addEventListener(\'mouseout\', function () {\n        var bP = _Elements__WEBPACK_IMPORTED_MODULE_1__["Elements"].getCharacterBlockPreview();\n        bP.style.visibility = "hidden";\n    });\n}\nfunction makeRect(rectObj, realWidth, realHeight) {\n    var imageScaleFactor = calcScaleFactor(realWidth, realHeight);\n    if (imageScaleFactor == null)\n        return;\n    // create blockBox\n    var rect = getDiv(rectObj.top, rectObj.left, rectObj.width, rectObj.height, imageScaleFactor);\n    rect.classList.add("blockThing");\n    rect.classList.add("blockThing-" + rectObj.xml.getAttribute("blockType"));\n    // create inner character boxes\n    var cXmls = rectObj.xml.getElementsByTagName("charParams");\n    for (var i = 0; i < cXmls.length; i++) {\n        var co = cXmls[i];\n        var t = Number(co.getAttribute("t"));\n        var l = Number(co.getAttribute("l"));\n        var b = Number(co.getAttribute("b"));\n        var r = Number(co.getAttribute("r"));\n        makeCRect(l, t, r - l, b - t, imageScaleFactor, co);\n    }\n    // set onClick Listener\n    rect.onclick = function () {\n        var xmlString = (new XMLSerializer()).serializeToString(rectObj.xml);\n        var readyString = Object(_xmlStuff__WEBPACK_IMPORTED_MODULE_2__["formatXML"])(xmlString).replace(/&/g, \'&amp;\').replace(/</g, \'&lt;\').replace(/>/g, \'&gt;\').replace(/ /g, \'&nbsp;\').replace(/\\n/g, \'<br />\');\n        _Elements__WEBPACK_IMPORTED_MODULE_1__["Elements"].getXmlContent().innerHTML = readyString;\n        new Promise(function (resolve, reject) {\n            //@ts-ignore\n            _Elements__WEBPACK_IMPORTED_MODULE_1__["Elements"].getXmlContent().innerHTML = PR.prettyPrintOne(readyString);\n        });\n        _Elements__WEBPACK_IMPORTED_MODULE_1__["Elements"].getTextContent().innerHTML = getTextFromTextBlock(rectObj.xml);\n    };\n    //@ts-ignore\n    _Elements__WEBPACK_IMPORTED_MODULE_1__["Elements"].getCanvasHolder().appendChild(rect);\n    //rect.onClick = function(rectObj.content)\n}\nfunction getTextFromTextBlock(xmlBlock) {\n    var text = "";\n    var lBlocks = xmlBlock.getElementsByTagName("line");\n    for (var j = 0; j < lBlocks.length; j++) {\n        var lB = lBlocks[j];\n        var cBlocks = lB.getElementsByTagName("charParams");\n        for (var i = 0; i < cBlocks.length; i++) {\n            var cB = cBlocks[i];\n            //@ts-ignore\n            text += cB.innerHTML;\n        }\n        text += "<br>";\n    }\n    //console.log(cBlocks)\n    return text;\n}\nvar domPareser = new DOMParser();\nfunction openXmlFile(path, block) {\n    var rawFile = new XMLHttpRequest();\n    rawFile.open("GET", path, true);\n    rawFile.onreadystatechange = function () {\n        if (rawFile.readyState === 4) {\n            var allText = rawFile.responseText;\n            var xml = domPareser.parseFromString(allText, "application/xml");\n            block(xml);\n        }\n    };\n    rawFile.send();\n}\nfunction loadXml(path) {\n    openXmlFile(path, function (xml) {\n        // delete previous created boxes and xml output\n        clearFields();\n        var page = xml.getElementsByTagName("page")[0];\n        var realWidth = Number(page.getAttribute("width"));\n        var realHeight = Number(page.getAttribute("height"));\n        // create boxes\n        var tags = xml.getElementsByTagName("block");\n        for (var i = 0; i < tags.length; i++) {\n            //@ts-ignore\n            var rectObj = new _RectangleOptions__WEBPACK_IMPORTED_MODULE_0__["RectangleOptions"](tags[i]);\n            makeRect(rectObj, realWidth, realHeight);\n        }\n    });\n}\n// divide width of canvas through real width of image\nfunction calcScaleFactor(realWidth, realHeight) {\n    // var image = Elements.getImageSide()\n    var image = document.getElementsByClassName("imageCanvas")[0];\n    if (image == null)\n        return null;\n    var rect = image.getBoundingClientRect();\n    var height = rect.bottom - rect.top;\n    var width = rect.right - rect.left;\n    //var realHeight = image.naturalHeight\n    //var realWidth = image.naturalWidth\n    //console.log("image height: " + height)\n    //console.log("natural height: " + realHeight)\n    return width / realWidth;\n}\n\n\n//# sourceURL=webpack:///./src/javascript/index.ts?')},"./src/javascript/xmlStuff.ts":
/*!************************************!*\
  !*** ./src/javascript/xmlStuff.ts ***!
  \************************************/
/*! exports provided: formatXML */function(module,__webpack_exports__,__webpack_require__){"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"formatXML\", function() { return formatXML; });\nfunction formatXML(input, indent) {\n    indent = indent || '\\t'; //you can set/define other ident than tabs\n    //PART 1: Add \\n where necessary\n    var xmlString = input.replace(/^\\s+|\\s+$/g, ''); //trim it (just in case) {method trim() not working in IE8}\n    xmlString = input\n        .replace(/(<([a-zA-Z]+\\b)[^>]*>)(?!<\\/\\2>|[\\w\\s])/g, \"$1\\n\") //add \\n after tag if not followed by the closing tag of pair or text node\n        .replace(/(<\\/[a-zA-Z]+[^>]*>)/g, \"$1\\n\") //add \\n after closing tag\n        .replace(/>\\s+(.+?)\\s+<(?!\\/)/g, \">\\n$1\\n<\") //add \\n between sets of angled brackets and text node between them\n        .replace(/>(.+?)<([a-zA-Z])/g, \">\\n$1\\n<$2\") //add \\n between angled brackets and text node between them\n        .replace(/\\?></, \"?>\\n<\"); //detect a header of XML\n    var xmlArr = xmlString.split('\\n'); //split it into an array (for analise each line separately)\n    //PART 2: indent each line appropriately\n    var tabs = ''; //store the current indentation\n    var start = 0; //starting line\n    if (/^<[?]xml/.test(xmlArr[0]))\n        start++; //if the first line is a header, ignore it\n    for (var i = start; i < xmlArr.length; i++) //for each line\n     {\n        var line = xmlArr[i].replace(/^\\s+|\\s+$/g, ''); //trim it (just in case)\n        if (/^<[/]/.test(line)) //if the line is a closing tag\n         {\n            tabs = tabs.replace(indent, ''); //remove one indent from the store\n            xmlArr[i] = tabs + line; //add the tabs at the beginning of the line\n        }\n        else if (/<.*>.*<\\/.*>|<.*[^>]\\/>/.test(line)) //if the line contains an entire node\n         {\n            //leave the store as is\n            xmlArr[i] = tabs + line; //add the tabs at the beginning of the line\n        }\n        else if (/<.*>/.test(line)) //if the line starts with an opening tag and does not contain an entire node\n         {\n            xmlArr[i] = tabs + line; //add the tabs at the beginning of the line\n            tabs += indent; //and add one indent to the store\n        }\n        else //if the line contain a text node\n         {\n            xmlArr[i] = tabs + line; // add the tabs at the beginning of the line\n        }\n    }\n    //PART 3: return formatted string (source)\n    return xmlArr.join('\\n'); //rejoin the array to a string and return it\n}\n\n\n//# sourceURL=webpack:///./src/javascript/xmlStuff.ts?")}});